#include <stdio.h>
#include<stdlib.h>
#include<ctype.h>
int a[20],top=-1;
void push(int v)
{
    if(top==19)
    {
        printf("stack full\n");
    }
    else{
        top=top+1;
        a[top]=v;
    }
}
int pop()
{
    if(top==-1)
    {
        printf("stack empty\n");
    }
    else{
        int t=a[top];
        top=top-1;
        return t;
    }
}

void print()
{
    for(int i=top;i>=0;i--)
    {
        printf("%d",a[i]);
    }
}


int main()
{
   char s[10],c;
   int n1,n2,d;
   printf("enter string\n");
   scanf("%s",s);
   for(int i=0;s[i]!='\0';i++)
   {
       c=s[i];
       switch(c)
       {
           case '+':
             n1=pop();
             n2=pop();
             push(n1+n2);
             break;
           case '*':
              n1=pop();
              n2=pop();
              push(n1*n2);
              break;
           case '-':
               n1=pop();
              n2=pop();
              push(n1-n2);
              break;
           case '/':
                n1=pop();
              n2=pop();
              push(n1/n2);
              break;
           default:
               d=(int)c-(int)'0';
               push(d);
             
       }
   }
   print();
   
   
   
    
}





















#include <stdio.h>
#include<stdlib.h>
#include<ctype.h>
char a[20];
int top=-1;
void push(char v)
{
    if(top==19)
    {
        printf("stack full\n");
    }
    else{
        top=top+1;
        a[top]=v;
    }
}
char pop()
{
    if(top==-1)
    {
        printf("stack empty\n");
    }
    else{
        char t=a[top];
        top=top-1;
        return t;
    }
}

void print()
{
    for(int i=top;i>=0;i--)
    {
        printf("%c",a[i]);
    }
}

int check(char c)
{
    if(c=='(' || c=='[' || c=='{')
    {
        return 1;
    }
    return 0;
}

int pre(char c)
{
    if( c=='(' || c==')')
    {
        return 1;
    }
    if(c=='[' || c==']')
    {
        return 2;
    }
    if(c=='{' || c=='}')
    {
        return 3;
    }
}

int main()
{
   char s[10],c;
   int n1,n2,d,flag=0;
   printf("enter string\n");
   scanf("%s",s);
   
   for(int i=0;s[i]!='\0';i++)
   {
       
       c=s[i];
       if(check(c)==1)
       {
           push(c);
           
       }
       else{
           if(pre(c)==pre(a[top]))
           {
               char h=pop();
           }
           else{
               flag=1;
               printf("not balanced\n");
               break;
               
           }
       }
       
           
          
       
   }
if(flag==0)
{
    printf("balanced\n");
}
 
   
}
